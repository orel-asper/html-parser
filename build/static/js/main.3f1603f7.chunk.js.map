{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","data","setData","search","setSearch","err","setErr","getData","src","a","fetch","encodeURIComponent","then","res","json","catch","className","type","placeholder","value","onChange","e","target","onClick","id","class","image","alt","title","Date","published","toLocaleString","dangerouslySetInnerHTML","__html","content","replace","description","innerHTML","links","map","p","author","source","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAuEeA,MAnEf,WAAgB,IAAD,EACWC,mBAAS,MADpB,mBACNC,EADM,KACAC,EADA,OAEeF,mBAAS,IAFxB,mBAENG,EAFM,KAEEC,EAFF,OAGSJ,oBAAS,GAHlB,mBAGNK,EAHM,KAGDC,EAHC,KAMPC,EAAO,uCAAG,WAAOC,GAAP,SAAAC,EAAA,yDACF,KAARD,EADU,iDAEdE,MAAM,IAAD,OAAKC,mBAAmBH,KAC1BI,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACX,GAAD,OAAUC,EAAQD,MACvBc,OAAM,SAAAV,GAAG,OAAIC,GAAO,MALT,2CAAH,sDAQb,OACE,qCACE,sBAAKU,UAAU,MAAf,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAjB,iBACA,qBAAKA,UAAU,SAAf,SACE,uBAAOA,UAAU,mBAAmBC,KAAK,OAAOC,YAAY,iBAAiBC,MAAOhB,EAAQiB,SAAU,SAAAC,GAAC,OAAIjB,EAAUiB,EAAEC,OAAOH,YAEhI,qBAAKH,UAAU,SAAf,SACE,wBAAQA,UAAU,oBAAoBO,QAAS,kBAAMhB,EAAQJ,IAA7D,yBAGJ,mBAAGqB,GAAG,YAEPnB,EAAM,sBAAKoB,MAAM,yBAAX,UACL,wBAAQF,QAAS,kBAAMjB,EAAO,KAAKmB,MAAM,WADpC,UAEE,4DAFF,sCAGE,KACC,OAATxB,EACC,mCACE,qBAAKe,UAAU,oBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,0BAASA,UAAU,QAAnB,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,mBAAlB,SACE,qBAAKR,IAAKP,EAAKyB,MAAOC,IAAI,cAG9B,qBAAKX,UAAU,gBAAf,SACE,sBAAKA,UAAU,UAAf,UACE,8BACE,iCAASf,EAAK2B,QACd,uBACA,gCAAQ,IAAIC,KAAK5B,EAAK6B,WAAWC,mBACjC,uBACA,qBAAKC,wBAAyB,CAAEC,OAAQhC,EAAKiC,QAAQC,QAAQ,uBAAwB,UAEtFlC,EAAKmC,YAAYC,UAClB,6BAAKpC,EAAKmC,cACTnC,EAAKqC,MAAMC,KAAI,SAAAC,GAAC,OAAI,qCAAE,gCAAQA,IAAU,6BACzC,uBACA,kCAAQvC,EAAKwC,OAAb,IAAsBxC,EAAKyC,wBAOrC,SCtDKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.3f1603f7.chunk.js","sourcesContent":["\nimport React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = useState(null)\n  const [search, setSearch] = useState('')\n  const [err, setErr] = useState(false)\n\n\n  const getData = async (src) => {\n    if (src === '') return;\n    fetch(`/${encodeURIComponent(src)}`)\n      .then((res) => res.json())\n      .then((data) => setData(data))\n      .catch(err => setErr(true))\n  }\n\n  return (\n    <>\n      <div className=\"box\">\n        <div className=\"field\">\n          <label className=\"label\">URL</label>\n          <div className=\"column\">\n            <input className=\"input is-rounded\" type=\"text\" placeholder=\"https:// - Url\" value={search} onChange={e => setSearch(e.target.value)} />\n          </div>\n          <div className=\"column\">\n            <button className=\"button is-primary\" onClick={() => getData(search)}>Search</button>\n          </div>\n        </div>\n        <p id=\"demo\"></p>\n      </div>\n      {err ? <div class=\"notification is-danger\">\n        <button onClick={() => setErr('')} class=\"delete\"></button>\n        message<strong> : Error fetching data</strong> Try again with a different url.\n      </div> : null}\n      {data !== null ?\n        <>\n          <div className=\"column is-desktop\">\n            <div className=\"box field\">\n              <article className=\"media\" >\n                <div className=\"media-left\">\n                  <figure className=\"image is-128x128\">\n                    <img src={data.image} alt=\"Image\" />\n                  </figure>\n                </div>\n                <div className=\"media-content\">\n                  <div className=\"content\">\n                    <p>\n                      <strong>{data.title}</strong>\n                      <br />\n                      <small>{new Date(data.published).toLocaleString()}</small>\n                      <br />\n                      <div dangerouslySetInnerHTML={{ __html: data.content.replace(/<\\/?!?(img|a)[^>]*>/g, '') }}></div>\n                    </p>\n                    {data.description.innerHTML}\n                    <h5>{data.description}</h5>\n                    {data.links.map(p => <><small>{p}</small><br /></>)}\n                    <hr />\n                    <small>{data.author} {data.source}</small>\n                  </div>\n                </div>\n              </article>\n            </div>\n          </div>\n        </>\n        : null}\n    </>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}